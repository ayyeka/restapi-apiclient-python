{
    "openapi": "3.0.3",
    "info": {
        "title": "RESTAPI Service",
        "description": "RESTful API",
        "version": "2.0"
    },
    "servers": [
        {
            "url": "https://restapi.ayyeka.com/v2.0"
        }
    ],
    "paths": {
        "/account/organization": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "getAllOrganizations account",
                "description": "Returns all organizations belonging to the account",
                "operationId": "account#getAllOrganizations",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredOrganizationCollection"
                                },
                                "example": [
                                    {
                                        "account_id": 123,
                                        "display_name": "MyOrganization LTD",
                                        "id": 123
                                    },
                                    {
                                        "account_id": 123,
                                        "display_name": "MyOrganization LTD",
                                        "id": 123
                                    },
                                    {
                                        "account_id": 123,
                                        "display_name": "MyOrganization LTD",
                                        "id": 123
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/account/organization/{organizationId}": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "getOrganizationById account",
                "description": "Returns information about the specified account",
                "operationId": "account#getOrganizationById",
                "parameters": [
                    {
                        "name": "organizationId",
                        "in": "path",
                        "description": "ID of the organization whose information should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the organization whose information should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredOrganization"
                                },
                                "example": {
                                    "account_id": 123,
                                    "display_name": "MyOrganization LTD",
                                    "id": 123
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/channel": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "getAllChannels channel",
                "description": "Returns information about all channels to which the client has access",
                "operationId": "channel#getAllChannels",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredChannelCollection"
                                },
                                "example": [
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Channel not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/channel/{channelId}": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "getChannelById channel",
                "description": "Returns information about the specified channel",
                "operationId": "channel#getChannelById",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "description": "ID of the channel whose information should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the channel whose information should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredChannel"
                                },
                                "example": {
                                    "creation_date": "2013-08-14T16:42:09Z",
                                    "device_id": 24,
                                    "display_name": "Pressure",
                                    "display_status_name": "Active",
                                    "id": 123,
                                    "on_device_num": 2,
                                    "status_id": 1,
                                    "type_display_name": "DIGITAL",
                                    "type_id": 3
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Channel not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "getAllDevices device",
                "description": "Returns information about all devices to which the client has access",
                "operationId": "device#getAllDevices",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceCollection"
                                },
                                "example": [
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/id/{deviceId}": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "getDeviceById device",
                "description": "Returns information about the specified device",
                "operationId": "device#getDeviceById",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose information should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose information should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredDevice"
                                },
                                "example": {
                                    "akid": "W4C016201630164EU",
                                    "display_name": "W4C018074024200205EU",
                                    "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                    "iccid": "C2510S067000000000RA",
                                    "iccid2": "C2510S067000000000RA",
                                    "id": 123,
                                    "meid": "359677060121128",
                                    "model_number": "Wavelet Water Overflow 5100",
                                    "serial_number": "W4C018074024200205EU",
                                    "site_display_name": "Orange Canary12",
                                    "site_id": 24
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/id/{deviceId}/sample/gps": {
            "get": {
                "tags": [
                    "samplegps"
                ],
                "summary": "getGPSByDeviceId samplegps",
                "description": "Returns GPS information about specified device",
                "operationId": "samplegps#getGPSByDeviceId",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose GPS data should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose GPS data should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredSampleGps"
                                },
                                "example": {
                                    "gps": {
                                        "altitude": 745.2,
                                        "date": "2006-12-24T14:09:24Z",
                                        "dilution_of_precision": 2.2,
                                        "latitude": 31.771959,
                                        "longitude": 35.217018,
                                        "number_of_satellites": 4
                                    },
                                    "id": 123,
                                    "stream_id": 24
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleGPS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{deviceId}/channels": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "getChannelsByDevice channel",
                "description": "Returns information about all channels of a specified device",
                "operationId": "channel#getChannelsByDevice",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose channels should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose channels should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredChannelCollection"
                                },
                                "example": [
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    },
                                    {
                                        "creation_date": "2003-05-03T02:27:44Z",
                                        "device_id": 24,
                                        "display_name": "Pressure",
                                        "display_status_name": "Active",
                                        "id": 123,
                                        "on_device_num": 2,
                                        "status_id": 1,
                                        "type_display_name": "DIGITAL",
                                        "type_id": 3
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Channel not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{deviceId}/health": {
            "get": {
                "tags": [
                    "devicehealth"
                ],
                "summary": "getDeviceHealths devicehealth",
                "description": "Returns up to 100 new counters from the specified device",
                "operationId": "devicehealth#getDeviceHealths",
                "parameters": [
                    {
                        "name": "lastDeliveredId",
                        "in": "query",
                        "description": "ID of the oldest health counter from which to start returning samples",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the oldest health counter from which to start returning samples",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose health counters should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose health counters should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceHealthCollection"
                                },
                                "example": [
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Health not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{deviceId}/lastHealth": {
            "get": {
                "tags": [
                    "devicehealth"
                ],
                "summary": "getLastDeviceHealth devicehealth",
                "description": "Returns information about the last known health counters from the specified device",
                "operationId": "devicehealth#getLastDeviceHealth",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose last health counters should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose last health counters should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceHealthCollection"
                                },
                                "example": [
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    },
                                    {
                                        "counter_type_id": 3,
                                        "device_id": 24,
                                        "id": 123,
                                        "sample_date": "2000-01-04T09:36:40Z",
                                        "value": 4
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Health not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{deviceId}/lastLog": {
            "get": {
                "tags": [
                    "devicelog"
                ],
                "summary": "getLastDeviceLog devicelog",
                "description": "Returns information about the last known log record from the specified device",
                "operationId": "devicelog#getLastDeviceLog",
                "parameters": [
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose last log counters should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose last log counters should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceLogCollection"
                                },
                                "example": [
                                    {
                                        "device_id": 24,
                                        "id": 123,
                                        "log_date": "1976-01-12T02:09:12Z",
                                        "message": "Error reading value",
                                        "source": "MBUS[20]"
                                    },
                                    {
                                        "device_id": 24,
                                        "id": 123,
                                        "log_date": "1976-01-12T02:09:12Z",
                                        "message": "Error reading value",
                                        "source": "MBUS[20]"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Log not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{deviceId}/log": {
            "get": {
                "tags": [
                    "devicelog"
                ],
                "summary": "getDeviceLogs devicelog",
                "description": "Returns up to 100 new logs from the specified device",
                "operationId": "devicelog#getDeviceLogs",
                "parameters": [
                    {
                        "name": "lastDeliveredId",
                        "in": "query",
                        "description": "ID of the oldest log counter from which to start returning samples",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the oldest log counter from which to start returning samples",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "deviceId",
                        "in": "path",
                        "description": "ID of the device whose log counters should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the device whose log counters should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceLogCollection"
                                },
                                "example": [
                                    {
                                        "device_id": 24,
                                        "id": 123,
                                        "log_date": "1976-01-12T02:09:12Z",
                                        "message": "Error reading value",
                                        "source": "MBUS[20]"
                                    },
                                    {
                                        "device_id": 24,
                                        "id": 123,
                                        "log_date": "1976-01-12T02:09:12Z",
                                        "message": "Error reading value",
                                        "source": "MBUS[20]"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Log not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/device/{serialNumber}": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "getDeviceBySerialNumber device",
                "description": "Returns information about the device corresponding to the specified serial number",
                "operationId": "device#getDeviceBySerialNumber",
                "parameters": [
                    {
                        "name": "serialNumber",
                        "in": "path",
                        "description": "Serial number of the device whose information should be returned",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Serial number of the device whose information should be returned",
                            "example": "24EB9B03590BE71A"
                        },
                        "example": "24EB9B03590BE71A"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredDevice"
                                },
                                "example": {
                                    "akid": "W4C016201630164EU",
                                    "display_name": "W4C018074024200205EU",
                                    "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                    "iccid": "C2510S067000000000RA",
                                    "iccid2": "C2510S067000000000RA",
                                    "id": 123,
                                    "meid": "359677060121128",
                                    "model_number": "Wavelet Water Overflow 5100",
                                    "serial_number": "W4C018074024200205EU",
                                    "site_display_name": "Orange Canary12",
                                    "site_id": 24
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "system"
                ],
                "summary": "healthStatus system",
                "description": "Can be used to determine if the system is in a healthy state. When healthy, HTTP 200 is returned. When unhealthy, HTTP 503. Note: only use the HTTP status code to determine the health status since the response body is optional.",
                "operationId": "system#healthStatus",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "description": "Health status",
                                    "example": "Repudiandae quis harum natus veniam libero."
                                },
                                "example": "Sit quidem et."
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "not_available: Unavailable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sample/batch": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarBatch sample",
                "description": "Get a Batch of New SamplesScalar",
                "operationId": "sample#getSamplesScalarBatch",
                "parameters": [
                    {
                        "name": "enableAck",
                        "in": "query",
                        "description": "If set to false, then the internal last delivered sample id value is set to the last sample ID in the batch sent in response to this call",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean",
                            "description": "If set to false, then the internal last delivered sample id value is set to the last sample ID in the batch sent in response to this call",
                            "default": true,
                            "example": true
                        },
                        "example": true
                    },
                    {
                        "name": "sampleID",
                        "in": "query",
                        "description": "Specifies to send samples with an ID number strictly higher than the sampleID. For example, if the sampleID value is 1234, the response could include samples with IDs such as [1235, 1240, 1241]",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples with an ID number strictly higher than the sampleID. For example, if the sampleID value is 1234, the response could include samples with IDs such as [1235, 1240, 1241]",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "backfillHours",
                        "in": "query",
                        "description": "Specifies to send samples starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples of the past 24 hours",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples of the past 24 hours",
                            "example": 24
                        },
                        "example": 24
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/batch/ack": {
            "post": {
                "tags": [
                    "sample"
                ],
                "summary": "ackSampleScalarBatch sample",
                "description": "Notify which Sample was the Last Sample Received by the Client",
                "operationId": "sample#ackSampleScalarBatch",
                "parameters": [
                    {
                        "name": "sampleId",
                        "in": "query",
                        "description": "The value to set in the last delivered sample id internal field",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The value to set in the last delivered sample id internal field",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "User-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "description": "User-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                            "example": "Id voluptates rerum itaque laborum est."
                        },
                        "example": "Et ullam ea dicta."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/batch/backfill": {
            "post": {
                "tags": [
                    "sample"
                ],
                "summary": "setBackfillSamplesScalarBatch sample",
                "description": "Reset the DateTime starting point for the next SamplesScalar Batch",
                "operationId": "sample#setBackfillSamplesScalarBatch",
                "parameters": [
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The date and time to use for setting the last delivered sample id internal field (Unix time, seconds since January 1, 1970 UTC.). The API resets the internal last delivered sample id value to the id of the sample whose date and time is closest to the specified date and time",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The date and time to use for setting the last delivered sample id internal field (Unix time, seconds since January 1, 1970 UTC.). The API resets the internal last delivered sample id value to the id of the sample whose date and time is closest to the specified date and time",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "ser-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "description": "ser-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                            "example": "Dolor qui."
                        },
                        "example": "Veniam ut consequuntur velit sint omnis."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/batch/status": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getLastSampleScalarBatch sample",
                "description": "Get the Last Delivered Sample of the Last Delivered SamplesScalar Batch",
                "operationId": "sample#getLastSampleScalarBatch",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalar"
                                },
                                "example": {
                                    "id": 123,
                                    "sample_date": "1983-04-16T06:05:39Z",
                                    "stream_id": 24,
                                    "value": "102.0000"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/gps/batch": {
            "get": {
                "tags": [
                    "samplegps"
                ],
                "summary": "getSamplesGPSBatch samplegps",
                "description": "Get a Batch of New Samples GPS",
                "operationId": "samplegps#getSamplesGPSBatch",
                "parameters": [
                    {
                        "name": "enableAck",
                        "in": "query",
                        "description": "If set to false, then the internal last delivered sample GPS id value is set to the last sample GPS ID in the batch sent in response to this call. If set to true, then the internal last delivered sample GPS id remains untouched by this call. We recommend setting this parameter to 'true' and calling ackSamplesGPSBatch to update the last delivered sample GPS id field",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean",
                            "description": "If set to false, then the internal last delivered sample GPS id value is set to the last sample GPS ID in the batch sent in response to this call. If set to true, then the internal last delivered sample GPS id remains untouched by this call. We recommend setting this parameter to 'true' and calling ackSamplesGPSBatch to update the last delivered sample GPS id field",
                            "default": true,
                            "example": true
                        },
                        "example": false
                    },
                    {
                        "name": "sampleID",
                        "in": "query",
                        "description": "Specifies to send samples GPS with an ID number strictly higher than the sampleID. For example, if the sampleID value is 1234, the response could include samples GPS with IDs such as [1235, 1240, 1241]",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples GPS with an ID number strictly higher than the sampleID. For example, if the sampleID value is 1234, the response could include samples GPS with IDs such as [1235, 1240, 1241]",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "backfillHours",
                        "in": "query",
                        "description": "Specifies to send samples GPS starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples GPS of the past 24 hours",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples GPS starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples GPS of the past 24 hours",
                            "example": 24
                        },
                        "example": 24
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleGPSBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "gps": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "stream_id": 24
                                        },
                                        {
                                            "gps": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "stream_id": 24
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleGPS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/gps/batch/ack": {
            "post": {
                "tags": [
                    "samplegps"
                ],
                "summary": "ackSampleGPSBatch samplegps",
                "description": "Notify which Sample GPS was the Last Sample GPS Received by the Client",
                "operationId": "samplegps#ackSampleGPSBatch",
                "parameters": [
                    {
                        "name": "sampleId",
                        "in": "query",
                        "description": "The value to set in the last delivered sample GPS id internal field",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The value to set in the last delivered sample GPS id internal field",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "User-Agent information, stored in the cloud to identify the applications that use the sampleGPSs batch APIs",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "description": "User-Agent information, stored in the cloud to identify the applications that use the sampleGPSs batch APIs",
                            "example": "Saepe iste voluptatem aliquid occaecati cupiditate recusandae."
                        },
                        "example": "Blanditiis dolorem enim consequatur harum."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleGPS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/image/batch": {
            "get": {
                "tags": [
                    "sampleimage"
                ],
                "summary": "getSamplesImageBatch sampleimage",
                "description": "Get Image Samples Batch",
                "operationId": "sampleimage#getSamplesImageBatch",
                "parameters": [
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "DateTime of oldest sample in batch in Unix Time format",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "DateTime of oldest sample in batch in Unix Time format",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleImageBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        },
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        },
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/image/id/{imageId}": {
            "get": {
                "tags": [
                    "sampleimage"
                ],
                "summary": "getSampleImageById sampleimage",
                "description": "Get Image Sample by Id",
                "operationId": "sampleimage#getSampleImageById",
                "parameters": [
                    {
                        "name": "imageId",
                        "in": "path",
                        "description": "Image Id of the image that should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Image Id of the image that should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleImage"
                                },
                                "example": {
                                    "height": 480,
                                    "id": 123,
                                    "sample_date": "1983-12-25T06:17:21Z",
                                    "size": 1024,
                                    "stream_id": 24,
                                    "url": "https://imageURL",
                                    "width": 640
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/rfid/batch": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getSamplesRFIDBatch samplerfid",
                "description": "Get a Batch of New Samples RFID",
                "operationId": "samplerfid#getSamplesRFIDBatch",
                "parameters": [
                    {
                        "name": "enableAck",
                        "in": "query",
                        "description": "If set to false, then the internal last delivered sample RFID id value is set to the last sample RFID ID in the batch sent in response to this call. If set to true, then the internal last delivered sample RFID id remains untouched by this call. We recommend setting this parameter to 'true' and calling ackSamplesRFIDBatch to update the last delivered sample RFID id field",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean",
                            "description": "If set to false, then the internal last delivered sample RFID id value is set to the last sample RFID ID in the batch sent in response to this call. If set to true, then the internal last delivered sample RFID id remains untouched by this call. We recommend setting this parameter to 'true' and calling ackSamplesRFIDBatch to update the last delivered sample RFID id field",
                            "default": true,
                            "example": false
                        },
                        "example": false
                    },
                    {
                        "name": "sampleId",
                        "in": "query",
                        "description": "Specifies to send samples RFID with an ID number strictly higher than the sampleId. For example, if the sampleId value is 1234, the response could include samples RFID with IDs such as [1235, 1240, 1241]",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples RFID with an ID number strictly higher than the sampleId. For example, if the sampleId value is 1234, the response could include samples RFID with IDs such as [1235, 1240, 1241]",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "backfillHours",
                        "in": "query",
                        "description": "Specifies to send samples RFID starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples RFID of the past 24 hours",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Specifies to send samples RFID starting this many hours ago. For example, if the backfillHours value is 24, this is a request to provide all samples RFID of the past 24 hours",
                            "example": 24
                        },
                        "example": 24
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleRFIDBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/rfid/batch/ack": {
            "post": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "ackSampleRFIDBatch samplerfid",
                "description": "Notify which Sample RFID was the Last Sample RFID Received by the Client",
                "operationId": "samplerfid#ackSampleRFIDBatch",
                "parameters": [
                    {
                        "name": "sample_id",
                        "in": "query",
                        "description": "The value to set in the last delivered sample RFID id internal field",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The value to set in the last delivered sample RFID id internal field",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "User-Agent information, stored in the cloud to identify the applications that use the sampleRFIDs batch APIs",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "description": "User-Agent information, stored in the cloud to identify the applications that use the sampleRFIDs batch APIs",
                            "example": "Sunt nemo itaque placeat."
                        },
                        "example": "Blanditiis eum quis magni."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/rfid/batch/backfill": {
            "post": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "setBackfillSamplesRFIDBatch samplerfid",
                "description": "Reset the DateTime starting point for the next Samples RFID Batch",
                "operationId": "samplerfid#setBackfillSamplesRFIDBatch",
                "parameters": [
                    {
                        "name": "sample_date",
                        "in": "query",
                        "description": "The date and time to use for setting the last delivered sample id internal field (Unix time, seconds since January 1, 1970 UTC.). The API resets the internal last delivered sample id value to the id of the sample whose date and time is closest to the specified date and time",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The date and time to use for setting the last delivered sample id internal field (Unix time, seconds since January 1, 1970 UTC.). The API resets the internal last delivered sample id value to the id of the sample whose date and time is closest to the specified date and time",
                            "example": 1582409385,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 1582409385
                    },
                    {
                        "name": "agent",
                        "in": "query",
                        "description": "ser-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "description": "ser-Agent information, stored in the cloud to identify the applications that use the samples batch APIs",
                            "example": "Voluptas facere blanditiis sint deserunt."
                        },
                        "example": "Sed quo et consequatur."
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/sample/rfid/batch/status": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getLastSampleRFIDBatch samplerfid",
                "description": "Get the Last Delivered Sample RFID of the Last Delivered Samples RFID Batch",
                "operationId": "samplerfid#getLastSampleRFIDBatch",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredSampleRfid"
                                },
                                "example": {
                                    "end_date": "1988-12-10T22:30:05Z",
                                    "gps_location_info": {
                                        "altitude": 745.2,
                                        "date": "2006-12-24T14:09:24Z",
                                        "dilution_of_precision": 2.2,
                                        "latitude": 31.771959,
                                        "longitude": 35.217018,
                                        "number_of_satellites": 4
                                    },
                                    "id": 123,
                                    "sample_date": "1972-05-31T15:52:21Z",
                                    "start_date": "2013-10-19T07:08:06Z",
                                    "stream_id": 24,
                                    "tag_ids": "Dolores perferendis."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "getAllSites site",
                "description": "Get All Sites",
                "operationId": "site#getAllSites",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSiteCollection"
                                },
                                "example": [
                                    {
                                        "account_organization_id": 13,
                                        "creation_date": "1986-07-12T08:22:44Z",
                                        "display_name": "Northern",
                                        "id": 123,
                                        "latitude": "Tempora voluptatum.",
                                        "longitude": "Fuga nesciunt in enim.",
                                        "status": "Active"
                                    },
                                    {
                                        "account_organization_id": 13,
                                        "creation_date": "1986-07-12T08:22:44Z",
                                        "display_name": "Northern",
                                        "id": 123,
                                        "latitude": "Tempora voluptatum.",
                                        "longitude": "Fuga nesciunt in enim.",
                                        "status": "Active"
                                    },
                                    {
                                        "account_organization_id": 13,
                                        "creation_date": "1986-07-12T08:22:44Z",
                                        "display_name": "Northern",
                                        "id": 123,
                                        "latitude": "Tempora voluptatum.",
                                        "longitude": "Fuga nesciunt in enim.",
                                        "status": "Active"
                                    },
                                    {
                                        "account_organization_id": 13,
                                        "creation_date": "1986-07-12T08:22:44Z",
                                        "display_name": "Northern",
                                        "id": 123,
                                        "latitude": "Tempora voluptatum.",
                                        "longitude": "Fuga nesciunt in enim.",
                                        "status": "Active"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/customAttributes": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "getAllSiteCustomAttributeValues site",
                "description": "Get All Sites' Custom Attribute Names and Values",
                "operationId": "site#getAllSiteCustomAttributeValues",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSiteCustomAttributeValueCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "site"
                ],
                "summary": "setSiteCustomAttributeValues site",
                "description": "Update Site Custom Attributes",
                "operationId": "site#setSiteCustomAttributeValues",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetSiteCustomAttributeValuesRequestBody"
                            },
                            "example": {
                                "attributes": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/customAttributes/names": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "getAllSiteCustomAttributesNames site",
                "description": "Get All Sites' Custom Attributes Names",
                "operationId": "site#getAllSiteCustomAttributesNames",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSiteCustomAttributeNameCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "getSiteById site",
                "description": "Get Site by ID",
                "operationId": "site#getSiteById",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredSite"
                                },
                                "example": {
                                    "account_organization_id": 13,
                                    "creation_date": "1999-06-28T02:39:56Z",
                                    "display_name": "Northern",
                                    "id": 123,
                                    "latitude": "Sit ratione quos sequi officia.",
                                    "longitude": "Facere nisi neque qui.",
                                    "status": "Active"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/customAttributes": {
            "get": {
                "tags": [
                    "site"
                ],
                "summary": "getSiteCustomAttributeValues site",
                "description": "Returns information about the custom attributes of a specified site",
                "operationId": "site#getSiteCustomAttributeValues",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose custom attributes should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose custom attributes should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSiteCustomAttributeValueCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Site not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/devices": {
            "get": {
                "tags": [
                    "device"
                ],
                "summary": "getDevicesBySite device",
                "description": "Get All Devices by Site",
                "operationId": "device#getDevicesBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose devices should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose devices should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredDeviceCollection"
                                },
                                "example": [
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    },
                                    {
                                        "akid": "W4C016201630164EU",
                                        "display_name": "W4C018074024200205EU",
                                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                                        "iccid": "C2510S067000000000RA",
                                        "iccid2": "C2510S067000000000RA",
                                        "id": 123,
                                        "meid": "359677060121128",
                                        "model_number": "Wavelet Water Overflow 5100",
                                        "serial_number": "W4C018074024200205EU",
                                        "site_display_name": "Orange Canary12",
                                        "site_id": 24
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Device not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/sample": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarBySite sample",
                "description": "Returns up to 100 samples from the specified site",
                "operationId": "sample#getSamplesScalarBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "lastSampleId",
                        "in": "query",
                        "description": "ID of the oldest sample from which to start returning samples",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the oldest sample from which to start returning samples",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarCollection"
                                },
                                "example": [
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    },
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    },
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/sample/batch": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarBatchBySite sample",
                "description": "Get Batch of Recent SamplesScalar of a Site",
                "operationId": "sample#getSamplesScalarBatchBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/sample/rfid/batch": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getSamplesRFIDBatchBySite samplerfid",
                "description": "Get Batch of Recent Samples RFID of a Site",
                "operationId": "samplerfid#getSamplesRFIDBatchBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleRFIDBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/streams": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getStreamsBySite stream",
                "description": "Get All Streams by Site (incl. gps)",
                "operationId": "stream#getStreamsBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose devices should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose devices should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCollection"
                                },
                                "example": [
                                    {
                                        "creation_date": "1990-08-20T17:35:12Z",
                                        "display_name": "Pressure measurement",
                                        "id": 123,
                                        "site_id": 24,
                                        "status_id": 1,
                                        "type_display_name": "Pressure",
                                        "type_id": 13,
                                        "units": "bar",
                                        "value_scale": "3"
                                    },
                                    {
                                        "creation_date": "1990-08-20T17:35:12Z",
                                        "display_name": "Pressure measurement",
                                        "id": 123,
                                        "site_id": 24,
                                        "status_id": 1,
                                        "type_display_name": "Pressure",
                                        "type_id": 13,
                                        "units": "bar",
                                        "value_scale": "3"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/site/{siteId}/streams/customAttributes": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getStreamCustomAttributeValuesBySite stream",
                "description": "Get Custom Attributes of a Site's Streams",
                "operationId": "stream#getStreamCustomAttributeValuesBySite",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "ID of the site whose streams' custom attributes should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the site whose streams' custom attributes should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCustomAttributeValueCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getAllStreams stream",
                "description": "Get All Streams",
                "operationId": "stream#getAllStreams",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCollection"
                                },
                                "example": [
                                    {
                                        "creation_date": "1990-08-20T17:35:12Z",
                                        "display_name": "Pressure measurement",
                                        "id": 123,
                                        "site_id": 24,
                                        "status_id": 1,
                                        "type_display_name": "Pressure",
                                        "type_id": 13,
                                        "units": "bar",
                                        "value_scale": "3"
                                    },
                                    {
                                        "creation_date": "1990-08-20T17:35:12Z",
                                        "display_name": "Pressure measurement",
                                        "id": 123,
                                        "site_id": 24,
                                        "status_id": 1,
                                        "type_display_name": "Pressure",
                                        "type_id": 13,
                                        "units": "bar",
                                        "value_scale": "3"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/customAttributes": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getAllStreamCustomAttributeValues stream",
                "description": "Get All Streams' Custom Attribute Names and Values",
                "operationId": "stream#getAllStreamCustomAttributeValues",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCustomAttributeValueCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "stream"
                ],
                "summary": "setStreamCustomAttributeValues stream",
                "description": "Update Stream Custom Attributes",
                "operationId": "stream#setStreamCustomAttributeValues",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetStreamCustomAttributeValuesRequestBody"
                            },
                            "example": {
                                "attributes": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/customAttributes/names": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getAllStreamCustomAttributesNames stream",
                "description": "Get All Streams' Custom Attributes Names",
                "operationId": "stream#getAllStreamCustomAttributesNames",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCustomAttributeNameCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getStreamById stream",
                "description": "Get Stream by ID",
                "operationId": "stream#getStreamById",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredStream"
                                },
                                "example": {
                                    "creation_date": "2007-03-29T01:45:18Z",
                                    "display_name": "Pressure measurement",
                                    "id": 123,
                                    "site_id": 24,
                                    "status_id": 1,
                                    "type_display_name": "Pressure",
                                    "type_id": 13,
                                    "units": "bar",
                                    "value_scale": "3"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/customAttributes": {
            "get": {
                "tags": [
                    "stream"
                ],
                "summary": "getStreamCustomAttributeValues stream",
                "description": "Returns information about the custom attributes of a specified stream",
                "operationId": "stream#getStreamCustomAttributeValues",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose custom attributes should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose custom attributes should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredStreamCustomAttributeValueCollection"
                                },
                                "example": [
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    },
                                    {
                                        "display_name": "Tag",
                                        "id": 123,
                                        "parent_id": 24,
                                        "value": "M4_20513021_940001_FI"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarByStream sample",
                "description": "Returns up to 100 samples from the specified stream",
                "operationId": "sample#getSamplesScalarByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "lastSampleId",
                        "in": "query",
                        "description": "ID of the oldest sample from which to start returning samples",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the oldest sample from which to start returning samples",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarCollection"
                                },
                                "example": [
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    },
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    },
                                    {
                                        "id": 123,
                                        "sample_date": "1995-09-19T15:35:20Z",
                                        "stream_id": 24,
                                        "value": "102.0000"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/agg": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarAggregationByStreamAndDateRange sample",
                "description": "Returns samples aggregation from specified stream and date range",
                "operationId": "sample#getSamplesScalarAggregationByStreamAndDateRange",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "timeFrame",
                        "in": "query",
                        "description": "Time Frame of the aggregation 10 15 20 30 or 60 minutes",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Time Frame of the aggregation 10 15 20 30 or 60 minutes",
                            "example": 60,
                            "enum": [
                                10,
                                15,
                                20,
                                30,
                                60
                            ]
                        },
                        "example": 60
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date and time (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "From date and time (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date and time (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "To date and time (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarAggregationBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "agg_values": {
                                                "avg": "15.0",
                                                "max": "200.0",
                                                "min": "1.0",
                                                "sum": "350.0"
                                            },
                                            "number_of_samples": 14,
                                            "start_date": "1995-03-31T01:51:58Z",
                                            "stream_id": 24
                                        },
                                        {
                                            "agg_values": {
                                                "avg": "15.0",
                                                "max": "200.0",
                                                "min": "1.0",
                                                "sum": "350.0"
                                            },
                                            "number_of_samples": 14,
                                            "start_date": "1995-03-31T01:51:58Z",
                                            "stream_id": 24
                                        },
                                        {
                                            "agg_values": {
                                                "avg": "15.0",
                                                "max": "200.0",
                                                "min": "1.0",
                                                "sum": "350.0"
                                            },
                                            "number_of_samples": 14,
                                            "start_date": "1995-03-31T01:51:58Z",
                                            "stream_id": 24
                                        },
                                        {
                                            "agg_values": {
                                                "avg": "15.0",
                                                "max": "200.0",
                                                "min": "1.0",
                                                "sum": "350.0"
                                            },
                                            "number_of_samples": 14,
                                            "start_date": "1995-03-31T01:51:58Z",
                                            "stream_id": 24
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/batch": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarBatchByStream sample",
                "description": "Get Batch of Recent SamplesScalar of a Stream",
                "operationId": "sample#getSamplesScalarBatchByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/gps/batch": {
            "get": {
                "tags": [
                    "samplegps"
                ],
                "summary": "getSamplesGPSBatchByStream samplegps",
                "description": "Get a Batch of New Samples GPS by stream id",
                "operationId": "samplegps#getSamplesGPSBatchByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples GPS should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples GPS should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The sampling date and time of the oldest sample GPS in the batch (Epoch timestamp \u003e946688460)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sampling date and time of the oldest sample GPS in the batch (Epoch timestamp \u003e946688460)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleGPSBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "gps": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "stream_id": 24
                                        },
                                        {
                                            "gps": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "stream_id": 24
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleGPS not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/image/batch": {
            "get": {
                "tags": [
                    "sampleimage"
                ],
                "summary": "getSamplesImageBatchByStream sampleimage",
                "description": "Get Image Samples Batch By Stream",
                "operationId": "sampleimage#getSamplesImageBatchByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose last sample should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose last sample should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "DateTime of oldest sample in batch in Unix Time format",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "DateTime of oldest sample in batch in Unix Time format",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleImageBatch"
                                },
                                "example": {
                                    "hasMore": true,
                                    "samples": [
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        },
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        },
                                        {
                                            "height": 480,
                                            "id": 123,
                                            "sample_date": "1990-02-20T23:36:33Z",
                                            "size": 1024,
                                            "stream_id": 24,
                                            "url": "https://imageURL",
                                            "width": 640
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/image/last": {
            "get": {
                "tags": [
                    "sampleimage"
                ],
                "summary": "getLastSampleImageByStream sampleimage",
                "description": "Get Last Image Sample from Stream",
                "operationId": "sampleimage#getLastSampleImageByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose last sample should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose last sample should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleImage"
                                },
                                "example": {
                                    "height": 480,
                                    "id": 123,
                                    "sample_date": "1999-05-09T07:13:46Z",
                                    "size": 1024,
                                    "stream_id": 24,
                                    "url": "https://imageURL",
                                    "width": 640
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/last": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getLastSampleScalarByStream sample",
                "description": "Get Last Sample from Stream",
                "operationId": "sample#getLastSampleScalarByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose last sample should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose last sample should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalar"
                                },
                                "example": {
                                    "id": 123,
                                    "sample_date": "1999-03-15T06:17:32Z",
                                    "stream_id": 24,
                                    "value": "102.0000"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/range": {
            "get": {
                "tags": [
                    "sample"
                ],
                "summary": "getSamplesScalarByStreamAndDateRange sample",
                "description": "Returns samples from specified stream and date range",
                "operationId": "sample#getSamplesScalarByStreamAndDateRange",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date and time (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "From date and time (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To date and time (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "To date and time (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 946688461,
                            "format":"int64"
                        },
                        "example": 1582409385
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit the number of samples to return",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Limit the number of samples to return",
                            "example": 100,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 100
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Get samples starting with an offset, where 1 is the first",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "Get samples starting with an offset, where 1 is the first",
                            "example": 80,
                            "minimum": 0
                        },
                        "example": 80
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleScalarBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        },
                                        {
                                            "id": 123,
                                            "sample_date": "1995-09-19T15:35:20Z",
                                            "stream_id": 24,
                                            "value": "102.0000"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Sample not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/rfid": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getSamplesRFIDByStream samplerfid",
                "description": "Returns up to 100 samples RFID from the specified stream",
                "operationId": "samplerfid#getSamplesRFIDByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "lastSampleId",
                        "in": "query",
                        "description": "ID of the oldest sample from which to start returning samples",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the oldest sample from which to start returning samples",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleRFIDCollection"
                                },
                                "example": [
                                    {
                                        "end_date": "2001-10-01T21:30:41Z",
                                        "gps_location_info": {
                                            "altitude": 745.2,
                                            "date": "2008-12-29T06:49:51Z",
                                            "dilution_of_precision": 2.2,
                                            "latitude": 31.771959,
                                            "longitude": 35.217018,
                                            "number_of_satellites": 4
                                        },
                                        "id": 123,
                                        "sample_date": "2010-02-17T19:33:58Z",
                                        "start_date": "2010-04-18T20:41:55Z",
                                        "stream_id": 24,
                                        "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                    },
                                    {
                                        "end_date": "2001-10-01T21:30:41Z",
                                        "gps_location_info": {
                                            "altitude": 745.2,
                                            "date": "2008-12-29T06:49:51Z",
                                            "dilution_of_precision": 2.2,
                                            "latitude": 31.771959,
                                            "longitude": 35.217018,
                                            "number_of_satellites": 4
                                        },
                                        "id": 123,
                                        "sample_date": "2010-02-17T19:33:58Z",
                                        "start_date": "2010-04-18T20:41:55Z",
                                        "stream_id": 24,
                                        "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                    },
                                    {
                                        "end_date": "2001-10-01T21:30:41Z",
                                        "gps_location_info": {
                                            "altitude": 745.2,
                                            "date": "2008-12-29T06:49:51Z",
                                            "dilution_of_precision": 2.2,
                                            "latitude": 31.771959,
                                            "longitude": 35.217018,
                                            "number_of_satellites": 4
                                        },
                                        "id": 123,
                                        "sample_date": "2010-02-17T19:33:58Z",
                                        "start_date": "2010-04-18T20:41:55Z",
                                        "stream_id": 24,
                                        "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/rfid/batch": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getSamplesRFIDBatchByStream samplerfid",
                "description": "Get Batch of Recent Samples RFID of a Stream",
                "operationId": "samplerfid#getSamplesRFIDBatchByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose recent samples should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose recent samples should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    },
                    {
                        "name": "sampleDate",
                        "in": "query",
                        "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                        "allowEmptyValue": true,
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "The sampling date and time of the oldest sample in the batch (Unix time, seconds since January 1, 1970 UTC.)",
                            "example": 1582409385,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 1582409385
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredSampleRFIDBatch"
                                },
                                "example": {
                                    "hasMore": false,
                                    "samples": [
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        },
                                        {
                                            "end_date": "2001-10-01T21:30:41Z",
                                            "gps_location_info": {
                                                "altitude": 745.2,
                                                "date": "2008-12-29T06:49:51Z",
                                                "dilution_of_precision": 2.2,
                                                "latitude": 31.771959,
                                                "longitude": 35.217018,
                                                "number_of_satellites": 4
                                            },
                                            "id": 123,
                                            "sample_date": "2010-02-17T19:33:58Z",
                                            "start_date": "2010-04-18T20:41:55Z",
                                            "stream_id": 24,
                                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/sample/rfid/last": {
            "get": {
                "tags": [
                    "samplerfid"
                ],
                "summary": "getLastSampleRFIDByStream samplerfid",
                "description": "Get Last Sample from Stream",
                "operationId": "samplerfid#getLastSampleRFIDByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "ID of the stream whose last sample should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the stream whose last sample should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AkapiStoredSampleRfid"
                                },
                                "example": {
                                    "end_date": "1989-10-05T09:15:16Z",
                                    "gps_location_info": {
                                        "altitude": 745.2,
                                        "date": "2006-12-24T14:09:24Z",
                                        "dilution_of_precision": 2.2,
                                        "latitude": 31.771959,
                                        "longitude": 35.217018,
                                        "number_of_satellites": 4
                                    },
                                    "id": 123,
                                    "sample_date": "1980-07-15T12:57:05Z",
                                    "start_date": "1988-02-08T11:30:42Z",
                                    "stream_id": 24,
                                    "tag_ids": "Et eos."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: SampleRFID not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/threshold": {
            "get": {
                "tags": [
                    "threshold"
                ],
                "summary": "getThresholdByStream threshold",
                "description": "Get thresholds for specified stream Id",
                "operationId": "threshold#getThresholdByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "Stream Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Stream Id",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetThresholdByStreamResponseBody"
                                },
                                "example": {
                                    "levels": [
                                        {
                                            "comment": "gz3",
                                            "display_name": "Low",
                                            "false_alarm_filter": 100,
                                            "lower_limit": -0.105,
                                            "notification_actions": [
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                }
                                            ],
                                            "output_actions": [
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                },
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                }
                                            ],
                                            "sample_actions": [
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                }
                                            ],
                                            "sample_interval": 100,
                                            "transmission_interval": "normal",
                                            "transmit_immediately": true,
                                            "upper_limit": 1.159
                                        },
                                        {
                                            "comment": "gz3",
                                            "display_name": "Low",
                                            "false_alarm_filter": 100,
                                            "lower_limit": -0.105,
                                            "notification_actions": [
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                }
                                            ],
                                            "output_actions": [
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                },
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                }
                                            ],
                                            "sample_actions": [
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                }
                                            ],
                                            "sample_interval": 100,
                                            "transmission_interval": "normal",
                                            "transmit_immediately": true,
                                            "upper_limit": 1.159
                                        },
                                        {
                                            "comment": "gz3",
                                            "display_name": "Low",
                                            "false_alarm_filter": 100,
                                            "lower_limit": -0.105,
                                            "notification_actions": [
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                }
                                            ],
                                            "output_actions": [
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                },
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                }
                                            ],
                                            "sample_actions": [
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                }
                                            ],
                                            "sample_interval": 100,
                                            "transmission_interval": "normal",
                                            "transmit_immediately": true,
                                            "upper_limit": 1.159
                                        },
                                        {
                                            "comment": "gz3",
                                            "display_name": "Low",
                                            "false_alarm_filter": 100,
                                            "lower_limit": -0.105,
                                            "notification_actions": [
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                },
                                                {
                                                    "num_repeats_all_on_failed": 256,
                                                    "relevance_threshold": 446983629210976137,
                                                    "repeats_per_user_on_failed": 256,
                                                    "type": "voice",
                                                    "user_group_id": 744
                                                }
                                            ],
                                            "output_actions": [
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                },
                                                {
                                                    "channel_num": 0,
                                                    "type": "set_down"
                                                }
                                            ],
                                            "sample_actions": [
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                },
                                                {
                                                    "sample_group_id": 744,
                                                    "stream_id": 4445,
                                                    "type": "single"
                                                }
                                            ],
                                            "sample_interval": 100,
                                            "transmission_interval": "normal",
                                            "transmit_immediately": true,
                                            "upper_limit": 1.159
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "threshold"
                ],
                "summary": "setThresholdByStream threshold",
                "description": "Set thresholds for specified stream Id",
                "operationId": "threshold#setThresholdByStream",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "Stream Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Stream Id",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetThresholdByStreamRequestBody"
                            },
                            "example": {
                                "levels": [
                                    {
                                        "comment": "kat",
                                        "display_name": "Low",
                                        "false_alarm_filter": 100,
                                        "notification_actions": [
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            }
                                        ],
                                        "output_actions": [
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            }
                                        ],
                                        "sample_actions": [
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            }
                                        ],
                                        "sample_interval": 100,
                                        "transmission_interval": "event",
                                        "transmit_immediately": true,
                                        "upper_limit": 1.159
                                    },
                                    {
                                        "comment": "kat",
                                        "display_name": "Low",
                                        "false_alarm_filter": 100,
                                        "notification_actions": [
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            }
                                        ],
                                        "output_actions": [
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            }
                                        ],
                                        "sample_actions": [
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            }
                                        ],
                                        "sample_interval": 100,
                                        "transmission_interval": "event",
                                        "transmit_immediately": true,
                                        "upper_limit": 1.159
                                    },
                                    {
                                        "comment": "kat",
                                        "display_name": "Low",
                                        "false_alarm_filter": 100,
                                        "notification_actions": [
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            }
                                        ],
                                        "output_actions": [
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            }
                                        ],
                                        "sample_actions": [
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            }
                                        ],
                                        "sample_interval": 100,
                                        "transmission_interval": "event",
                                        "transmit_immediately": true,
                                        "upper_limit": 1.159
                                    },
                                    {
                                        "comment": "kat",
                                        "display_name": "Low",
                                        "false_alarm_filter": 100,
                                        "notification_actions": [
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            },
                                            {
                                                "num_repeats_all_on_failed": 256,
                                                "relevance_threshold": 6696544136274882686,
                                                "repeats_per_user_on_failed": 256,
                                                "type": "ticketSystem",
                                                "user_group_id": 744
                                            }
                                        ],
                                        "output_actions": [
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            },
                                            {
                                                "channel_num": 0,
                                                "type": "set_down"
                                            }
                                        ],
                                        "sample_actions": [
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            },
                                            {
                                                "sample_group_id": 744,
                                                "stream_id": 4445,
                                                "type": "pause"
                                            }
                                        ],
                                        "sample_interval": 100,
                                        "transmission_interval": "event",
                                        "transmit_immediately": true,
                                        "upper_limit": 1.159
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No Content response."
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/stream/{streamId}/threshold/status": {
            "get": {
                "tags": [
                    "threshold"
                ],
                "summary": "getThresholdStatus threshold",
                "description": "Get thresholds for specified stream Id",
                "operationId": "threshold#getThresholdStatus",
                "parameters": [
                    {
                        "name": "streamId",
                        "in": "path",
                        "description": "Stream Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "Stream Id",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ThresholdStatus"
                                },
                                "example": {
                                    "Status": "Voluptas est qui eius a."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Stream not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "getAllUsers user",
                "description": "Returns all users",
                "operationId": "user#getAllUsers",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredUserCollection"
                                },
                                "example": [
                                    {
                                        "email_address": "test@test.tst",
                                        "id": 123,
                                        "user_name": "username"
                                    },
                                    {
                                        "email_address": "test@test.tst",
                                        "id": 123,
                                        "user_name": "username"
                                    },
                                    {
                                        "email_address": "test@test.tst",
                                        "id": 123,
                                        "user_name": "username"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/user/uiPreferences": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "getUIPreferences user",
                "description": "Returns the current user's UI preferences",
                "operationId": "user#getUIPreferences",
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredUIPreferences"
                                },
                                "example": {
                                    "date_format": "Est et omnis.",
                                    "time_format": "Veritatis voluptatem."
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "getUserById user",
                "description": "Returns information about the specified user",
                "operationId": "user#getUserById",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user whose information should be returned",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "description": "ID of the user whose information should be returned",
                            "example": 123,
                            "minimum": 1,
                            "format":"int64"
                        },
                        "example": 123
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StoredUserDetails"
                                },
                                "example": {
                                    "email_address": "test@test.tst",
                                    "first_name": "John",
                                    "id": 123,
                                    "last_name": "Doe",
                                    "mobile_phone": "012345678901",
                                    "timezone_name": "UTC",
                                    "user_name": "username"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad_request: Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized: Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "forbidden: Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "not_found: Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "too_many_requests: Too many requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal_server_error: System error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unauthorized"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwt_header_Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Aggregation": {
                "type": "object",
                "properties": {
                    "avg": {
                        "type": "string",
                        "description": "Average",
                        "example": "15.0"
                    },
                    "max": {
                        "type": "string",
                        "description": "Maximum",
                        "example": "200.0"
                    },
                    "min": {
                        "type": "string",
                        "description": "Minimum",
                        "example": "1.0"
                    },
                    "sum": {
                        "type": "string",
                        "description": "Sum",
                        "example": "350.0"
                    }
                },
                "example": {
                    "avg": "15.0",
                    "max": "200.0",
                    "min": "1.0",
                    "sum": "350.0"
                },
                "required": [
                    "min",
                    "max",
                    "avg",
                    "sum"
                ]
            },
            "AkapiStoredChannel": {
                "type": "object",
                "properties": {
                    "creation_date": {
                        "type": "string",
                        "description": "Creation date",
                        "example": "2009-11-20T11:46:03Z",
                        "format": "date-time"
                    },
                    "device_id": {
                        "type": "integer",
                        "description": "Device ID",
                        "example": 24,
                        "minimum": 1,
                        "format": "int64"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Channel name",
                        "example": "Pressure",
                        "maxLength": 256
                    },
                    "display_status_name": {
                        "type": "string",
                        "description": "Status name",
                        "example": "Active",
                        "maxLength": 64
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the channel.",
                        "example": 123,
                        "format":"int64"
                    },
                    "on_device_num": {
                        "type": "integer",
                        "description": "On device number",
                        "example": 2
                    },
                    "status_id": {
                        "type": "integer",
                        "description": "Status ID",
                        "example": 1,
                        "minimum": 1
                    },
                    "type_display_name": {
                        "type": "string",
                        "description": "Type name",
                        "example": "DIGITAL",
                        "maxLength": 32
                    },
                    "type_id": {
                        "type": "integer",
                        "description": "Type ID",
                        "example": 3,
                        "minimum": 1
                    }
                },
                "example": {
                    "creation_date": "2007-09-11T16:28:28Z",
                    "device_id": 24,
                    "display_name": "Pressure",
                    "display_status_name": "Active",
                    "id": 123,
                    "on_device_num": 2,
                    "status_id": 1,
                    "type_display_name": "DIGITAL",
                    "type_id": 3
                },
                "required": [
                    "id",
                    "device_id",
                    "creation_date",
                    "display_name",
                    "status_id",
                    "on_device_num",
                    "type_id",
                    "type_display_name",
                    "display_status_name"
                ]
            },
            "AkapiStoredDevice": {
                "type": "object",
                "properties": {
                    "akid": {
                        "type": "string",
                        "description": "Device HW ID",
                        "example": "W4C016201630164EU",
                        "maxLength": 50
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Device name",
                        "example": "W4C018074024200205EU",
                        "maxLength": 256
                    },
                    "firmware_version": {
                        "type": "string",
                        "description": "Firmware version",
                        "example": "AK3SGSTM__v1.51_20140212T081829",
                        "maxLength": 90
                    },
                    "iccid": {
                        "type": "string",
                        "description": "Cellular ICCID",
                        "example": "C2510S067000000000RA",
                        "maxLength": 30
                    },
                    "iccid2": {
                        "type": "string",
                        "description": "Cellular ICCID",
                        "example": "C2510S067000000000RA",
                        "maxLength": 30
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the device.",
                        "example": 123,
                        "format":"int64"
                    },
                    "meid": {
                        "type": "string",
                        "description": "Cellular ICCID",
                        "example": "359677060121128",
                        "maxLength": 15
                    },
                    "model_number": {
                        "type": "string",
                        "description": "Model number",
                        "example": "Wavelet Water Overflow 5100",
                        "maxLength": 2048
                    },
                    "serial_number": {
                        "type": "string",
                        "description": "Serial number",
                        "example": "W4C018074024200205EU",
                        "maxLength": 256
                    },
                    "site_display_name": {
                        "type": "string",
                        "description": "Site name",
                        "example": "Orange Canary12",
                        "maxLength": 256
                    },
                    "site_id": {
                        "type": "integer",
                        "description": "Site ID of device",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    }
                },
                "example": {
                    "akid": "W4C016201630164EU",
                    "display_name": "W4C018074024200205EU",
                    "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                    "iccid": "C2510S067000000000RA",
                    "iccid2": "C2510S067000000000RA",
                    "id": 123,
                    "meid": "359677060121128",
                    "model_number": "Wavelet Water Overflow 5100",
                    "serial_number": "W4C018074024200205EU",
                    "site_display_name": "Orange Canary12",
                    "site_id": 24
                },
                "required": [
                    "id",
                    "serial_number",
                    "display_name",
                    "model_number",
                    "site_id",
                    "site_display_name",
                    "akid",
                    "iccid",
                    "iccid2",
                    "meid",
                    "firmware_version"
                ]
            },
            "AkapiStoredDeviceHealth": {
                "type": "object",
                "properties": {
                    "counter_type_id": {
                        "type": "integer",
                        "description": "Counter type ID",
                        "example": 3,
                        "minimum": 1
                    },
                    "device_id": {
                        "type": "integer",
                        "description": "Device ID of device health",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the device health.",
                        "example": 123,
                        "format":"int64"
                    },
                    "sample_date": {
                        "type": "string",
                        "description": "Date of sample",
                        "example": "2002-11-25T04:07:15Z",
                        "format": "date-time"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Value",
                        "example": 4,
                        "minimum": 1
                    }
                },
                "example": {
                    "counter_type_id": 3,
                    "device_id": 24,
                    "id": 123,
                    "sample_date": "2009-12-31T12:03:24Z",
                    "value": 4
                },
                "required": [
                    "id",
                    "device_id",
                    "sample_date",
                    "counter_type_id",
                    "value"
                ]
            },
            "AkapiStoredDeviceLog": {
                "type": "object",
                "properties": {
                    "device_id": {
                        "type": "integer",
                        "description": "Device ID of device log",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the device log.",
                        "example": 123,
                        "format":"int64"
                    },
                    "log_date": {
                        "type": "string",
                        "description": "Log of sample",
                        "example": "1987-11-13T15:49:04Z",
                        "format": "date-time"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message",
                        "example": "Error reading value",
                        "maxLength": 256
                    },
                    "source": {
                        "type": "string",
                        "description": "Source",
                        "example": "MBUS[20]",
                        "maxLength": 10
                    }
                },
                "example": {
                    "device_id": 24,
                    "id": 123,
                    "log_date": "2000-11-27T18:01:48Z",
                    "message": "Error reading value",
                    "source": "MBUS[20]"
                },
                "required": [
                    "id",
                    "device_id",
                    "log_date",
                    "source",
                    "message"
                ]
            },
            "AkapiStoredOrganization": {
                "type": "object",
                "properties": {
                    "account_id": {
                        "type": "integer",
                        "description": "Account ID",
                        "example": 123,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Organization name",
                        "example": "MyOrganization LTD",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the organization.",
                        "example": 123,
                        "format":"int64"
                    }
                },
                "example": {
                    "account_id": 123,
                    "display_name": "MyOrganization LTD",
                    "id": 123
                },
                "required": [
                    "id",
                    "account_id",
                    "display_name"
                ]
            },
            "AkapiStoredSampleGps": {
                "type": "object",
                "properties": {
                    "gps": {
                        "$ref": "#/components/schemas/GPS"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the sample GPS.",
                        "example": 123,
                        "format": "int64"
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "Stream ID",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    }
                },
                "example": {
                    "gps": {
                        "altitude": 745.2,
                        "date": "2006-12-24T14:09:24Z",
                        "dilution_of_precision": 2.2,
                        "latitude": 31.771959,
                        "longitude": 35.217018,
                        "number_of_satellites": 4
                    },
                    "id": 123,
                    "stream_id": 24
                },
                "required": [
                    "id",
                    "stream_id",
                    "gps"
                ]
            },
            "AkapiStoredSampleRfid": {
                "type": "object",
                "properties": {
                    "end_date": {
                        "type": "string",
                        "description": "End date",
                        "example": "2011-10-27T08:08:08Z",
                        "format": "date-time"
                    },
                    "gps_location_info": {
                        "$ref": "#/components/schemas/GPS"
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the sample RFID.",
                        "example": 123,
                        "format": "int64"
                    },
                    "sample_date": {
                        "type": "string",
                        "description": "Sample date",
                        "example": "2004-10-08T02:38:49Z",
                        "format": "date-time"
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Start date",
                        "example": "1982-06-08T20:59:41Z",
                        "format": "date-time"
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "Stream ID",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "tag_ids": {
                        "type": "string",
                        "description": "Tag IDs",
                        "example": "Aut vel debitis ad."
                    }
                },
                "example": {
                    "end_date": "1993-03-25T12:46:24Z",
                    "gps_location_info": {
                        "altitude": 745.2,
                        "date": "2006-12-24T14:09:24Z",
                        "dilution_of_precision": 2.2,
                        "latitude": 31.771959,
                        "longitude": 35.217018,
                        "number_of_satellites": 4
                    },
                    "id": 123,
                    "sample_date": "1989-06-08T07:49:30Z",
                    "start_date": "2004-08-12T13:39:25Z",
                    "stream_id": 24,
                    "tag_ids": "Explicabo accusantium modi dignissimos."
                },
                "required": [
                    "id",
                    "stream_id",
                    "sample_date",
                    "start_date",
                    "end_date",
                    "tag_ids",
                    "gps_location_info"
                ]
            },
            "AkapiStoredSampleScalarAggr": {
                "type": "object",
                "properties": {
                    "agg_values": {
                        "$ref": "#/components/schemas/Aggregation"
                    },
                    "number_of_samples": {
                        "type": "integer",
                        "description": "Number of aggregated samples",
                        "example": 14
                    },
                    "start_date": {
                        "type": "string",
                        "description": "Frame start date",
                        "example": "1970-04-02T19:46:17Z",
                        "format": "date-time"
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "Stream ID",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    }
                },
                "example": {
                    "agg_values": {
                        "avg": "15.0",
                        "max": "200.0",
                        "min": "1.0",
                        "sum": "350.0"
                    },
                    "number_of_samples": 14,
                    "start_date": "1997-11-17T08:29:12Z",
                    "stream_id": 24
                },
                "required": [
                    "stream_id",
                    "start_date",
                    "number_of_samples",
                    "agg_values"
                ]
            },
            "AkapiStoredSite": {
                "type": "object",
                "properties": {
                    "account_organization_id": {
                        "type": "integer",
                        "description": "Account organization ID",
                        "example": 13,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "creation_date": {
                        "type": "string",
                        "description": "Creation date",
                        "example": "1999-06-20T02:06:07Z",
                        "format": "date-time"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Northern",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the site.",
                        "example": 123,
                        "format": "int64"
                    },
                    "latitude": {
                        "type": "string",
                        "description": "Site's Latitude",
                        "example": "Aliquid eum delectus et dicta."
                    },
                    "longitude": {
                        "type": "string",
                        "description": "Site's Longitude",
                        "example": "Explicabo quo asperiores odio dolores voluptate molestias."
                    },
                    "status": {
                        "type": "string",
                        "description": "Status display name",
                        "example": "Active",
                        "maxLength": 64
                    }
                },
                "example": {
                    "account_organization_id": 13,
                    "creation_date": "1996-03-26T07:17:58Z",
                    "display_name": "Northern",
                    "id": 123,
                    "latitude": "Dolores ratione debitis.",
                    "longitude": "Sunt atque sed quis occaecati et suscipit.",
                    "status": "Active"
                },
                "required": [
                    "id",
                    "creation_date",
                    "display_name",
                    "status",
                    "longitude",
                    "latitude"
                ]
            },
            "AkapiStoredSiteCustomAttributeName": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Tag",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the site custom attribute",
                        "example": 123,
                        "format": "int64"
                    }
                },
                "example": {
                    "display_name": "Tag",
                    "id": 123
                },
                "required": [
                    "id",
                    "display_name"
                ]
            },
            "AkapiStoredSiteCustomAttributeValue": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Tag",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the site custom attribute value.",
                        "example": 123,
                        "format":"int64"
                    },
                    "parent_id": {
                        "type": "integer",
                        "description": "Parent ID",
                        "example": 24,
                        "minimum": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "Value",
                        "example": "M4_20513021_940001_FI",
                        "maxLength": 256
                    }
                },
                "example": {
                    "display_name": "Tag",
                    "id": 123,
                    "parent_id": 24,
                    "value": "M4_20513021_940001_FI"
                },
                "required": [
                    "id",
                    "parent_id",
                    "display_name",
                    "value"
                ]
            },
            "AkapiStoredStream": {
                "type": "object",
                "properties": {
                    "creation_date": {
                        "type": "string",
                        "description": "Creation date",
                        "example": "1973-12-24T11:43:53Z",
                        "format": "date-time"
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Pressure measurement",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the stream.",
                        "example": 123,
                        "format": "int64"
                    },
                    "site_id": {
                        "type": "integer",
                        "description": "Site ID",
                        "example": 24,
                        "minimum": 1,
                        "format":"int64"
                    },
                    "status_id": {
                        "type": "integer",
                        "description": "Status ID",
                        "example": 1,
                        "minimum": 1
                    },
                    "type_display_name": {
                        "type": "string",
                        "description": "Type display name",
                        "example": "Pressure",
                        "maxLength": 32
                    },
                    "type_id": {
                        "type": "integer",
                        "description": "Type ID",
                        "example": 13,
                        "minimum": 1
                    },
                    "units": {
                        "type": "string",
                        "description": "Units",
                        "example": "bar",
                        "maxLength": 32
                    },
                    "value_scale": {
                        "type": "string",
                        "description": "Value scale",
                        "example": "3"
                    }
                },
                "example": {
                    "creation_date": "2015-05-19T13:24:12Z",
                    "display_name": "Pressure measurement",
                    "id": 123,
                    "site_id": 24,
                    "status_id": 1,
                    "type_display_name": "Pressure",
                    "type_id": 13,
                    "units": "bar",
                    "value_scale": "3"
                },
                "required": [
                    "id",
                    "site_id",
                    "creation_date",
                    "display_name",
                    "status_id",
                    "type_id",
                    "type_display_name",
                    "units",
                    "value_scale"
                ]
            },
            "AkapiStoredStreamCustomAttributeName": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Tag",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the stream custom attribute",
                        "example": 123,
                        "format": "int64"
                    }
                },
                "example": {
                    "display_name": "Tag",
                    "id": 123
                },
                "required": [
                    "id",
                    "display_name"
                ]
            },
            "AkapiStoredStreamCustomAttributeValue": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string",
                        "description": "Display name",
                        "example": "Tag",
                        "maxLength": 256
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the stream custom attribute value.",
                        "example": 123,
                        "format": "int64"
                    },
                    "parent_id": {
                        "type": "integer",
                        "description": "Parent ID",
                        "example": 24,
                        "minimum": 1
                    },
                    "value": {
                        "type": "string",
                        "description": "Value",
                        "example": "M4_20513021_940001_FI",
                        "maxLength": 256
                    }
                },
                "example": {
                    "display_name": "Tag",
                    "id": 123,
                    "parent_id": 24,
                    "value": "M4_20513021_940001_FI"
                },
                "required": [
                    "id",
                    "parent_id",
                    "display_name",
                    "value"
                ]
            },
            "AkapiStoredUser": {
                "type": "object",
                "properties": {
                    "email_address": {
                        "type": "string",
                        "description": "email address",
                        "example": "test@test.tst",
                        "maxLength": 255
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the user.",
                        "example": 123,
                        "minimum": 1,
                        "format": "int64"
                    },
                    "user_name": {
                        "type": "string",
                        "description": "username",
                        "example": "username",
                        "maxLength": 255
                    }
                },
                "example": {
                    "email_address": "test@test.tst",
                    "id": 123,
                    "user_name": "username"
                },
                "required": [
                    "id",
                    "user_name"
                ]
            },
            "GPS": {
                "type": "object",
                "properties": {
                    "altitude": {
                        "type": "number",
                        "description": "Altitude",
                        "example": 745.2,
                        "format": "float"
                    },
                    "date": {
                        "type": "string",
                        "description": "Date of sample",
                        "example": "1991-01-17T17:35:25Z",
                        "format": "date-time"
                    },
                    "dilution_of_precision": {
                        "type": "number",
                        "description": "Dilution of precision",
                        "example": 2.2,
                        "format": "float"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "Latitude",
                        "example": 31.771959,
                        "minimum": -90,
                        "maximum": 90
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude",
                        "example": 35.217018,
                        "minimum": -180,
                        "maximum": 180
                    },
                    "number_of_satellites": {
                        "type": "integer",
                        "description": "Number of satellites",
                        "example": 4
                    }
                },
                "example": {
                    "altitude": 745.2,
                    "date": "2006-05-30T15:23:20Z",
                    "dilution_of_precision": 2.2,
                    "latitude": 31.771959,
                    "longitude": 35.217018,
                    "number_of_satellites": 4
                },
                "required": [
                    "latitude",
                    "longitude",
                    "altitude",
                    "dilution_of_precision",
                    "number_of_satellites",
                    "date"
                ]
            },
            "GetThresholdByStreamResponseBody": {
                "type": "object",
                "properties": {
                    "levels": {
                        "$ref": "#/components/schemas/StoredThresholdLevelCollection"
                    }
                },
                "example": {
                    "levels": [
                        {
                            "comment": "gz3",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "lower_limit": -0.105,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "normal",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "gz3",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "lower_limit": -0.105,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "normal",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "gz3",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "lower_limit": -0.105,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "normal",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "gz3",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "lower_limit": -0.105,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 446983629210976137,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "voice",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "single"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "normal",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        }
                    ]
                }
            },
            "SetSiteCustomAttributeValuesRequestBody": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AkapiStoredSiteCustomAttributeValue"
                        },
                        "example": [
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            },
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            },
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            },
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            }
                        ]
                    }
                },
                "example": {
                    "attributes": [
                        {
                            "display_name": "Tag",
                            "id": 123,
                            "parent_id": 24,
                            "value": "M4_20513021_940001_FI"
                        },
                        {
                            "display_name": "Tag",
                            "id": 123,
                            "parent_id": 24,
                            "value": "M4_20513021_940001_FI"
                        }
                    ]
                }
            },
            "SetStreamCustomAttributeValuesRequestBody": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AkapiStoredStreamCustomAttributeValue"
                        },
                        "example": [
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            },
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            },
                            {
                                "display_name": "Tag",
                                "id": 123,
                                "parent_id": 24,
                                "value": "M4_20513021_940001_FI"
                            }
                        ]
                    }
                },
                "example": {
                    "attributes": [
                        {
                            "display_name": "Tag",
                            "id": 123,
                            "parent_id": 24,
                            "value": "M4_20513021_940001_FI"
                        },
                        {
                            "display_name": "Tag",
                            "id": 123,
                            "parent_id": 24,
                            "value": "M4_20513021_940001_FI"
                        }
                    ]
                }
            },
            "SetThresholdByStreamRequestBody": {
                "type": "object",
                "properties": {
                    "levels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdLevel2"
                        },
                        "example": [
                            {
                                "comment": "kat",
                                "display_name": "Low",
                                "false_alarm_filter": 100,
                                "notification_actions": [
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    },
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    },
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    }
                                ],
                                "output_actions": [
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    },
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    },
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    }
                                ],
                                "sample_actions": [
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    }
                                ],
                                "sample_interval": 100,
                                "transmission_interval": "event",
                                "transmit_immediately": true,
                                "upper_limit": 1.159
                            },
                            {
                                "comment": "kat",
                                "display_name": "Low",
                                "false_alarm_filter": 100,
                                "notification_actions": [
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    },
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    },
                                    {
                                        "num_repeats_all_on_failed": 256,
                                        "relevance_threshold": 6696544136274882686,
                                        "repeats_per_user_on_failed": 256,
                                        "type": "ticketSystem",
                                        "user_group_id": 744
                                    }
                                ],
                                "output_actions": [
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    },
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    },
                                    {
                                        "channel_num": 0,
                                        "type": "set_down"
                                    }
                                ],
                                "sample_actions": [
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    },
                                    {
                                        "sample_group_id": 744,
                                        "stream_id": 4445,
                                        "type": "pause"
                                    }
                                ],
                                "sample_interval": 100,
                                "transmission_interval": "event",
                                "transmit_immediately": true,
                                "upper_limit": 1.159
                            }
                        ]
                    }
                },
                "example": {
                    "levels": [
                        {
                            "comment": "kat",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "event",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "kat",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "event",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "kat",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "event",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        },
                        {
                            "comment": "kat",
                            "display_name": "Low",
                            "false_alarm_filter": 100,
                            "notification_actions": [
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                },
                                {
                                    "num_repeats_all_on_failed": 256,
                                    "relevance_threshold": 6696544136274882686,
                                    "repeats_per_user_on_failed": 256,
                                    "type": "ticketSystem",
                                    "user_group_id": 744
                                }
                            ],
                            "output_actions": [
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                },
                                {
                                    "channel_num": 0,
                                    "type": "set_down"
                                }
                            ],
                            "sample_actions": [
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                },
                                {
                                    "sample_group_id": 744,
                                    "stream_id": 4445,
                                    "type": "pause"
                                }
                            ],
                            "sample_interval": 100,
                            "transmission_interval": "event",
                            "transmit_immediately": true,
                            "upper_limit": 1.159
                        }
                    ]
                },
                "required": [
                    "levels"
                ]
            },
            "StoredChannelCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredChannel"
                },
                "example": [
                    {
                        "creation_date": "2003-05-03T02:27:44Z",
                        "device_id": 24,
                        "display_name": "Pressure",
                        "display_status_name": "Active",
                        "id": 123,
                        "on_device_num": 2,
                        "status_id": 1,
                        "type_display_name": "DIGITAL",
                        "type_id": 3
                    },
                    {
                        "creation_date": "2003-05-03T02:27:44Z",
                        "device_id": 24,
                        "display_name": "Pressure",
                        "display_status_name": "Active",
                        "id": 123,
                        "on_device_num": 2,
                        "status_id": 1,
                        "type_display_name": "DIGITAL",
                        "type_id": 3
                    }
                ]
            },
            "StoredDeviceCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredDevice"
                },
                "example": [
                    {
                        "akid": "W4C016201630164EU",
                        "display_name": "W4C018074024200205EU",
                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                        "iccid": "C2510S067000000000RA",
                        "iccid2": "C2510S067000000000RA",
                        "id": 123,
                        "meid": "359677060121128",
                        "model_number": "Wavelet Water Overflow 5100",
                        "serial_number": "W4C018074024200205EU",
                        "site_display_name": "Orange Canary12",
                        "site_id": 24
                    },
                    {
                        "akid": "W4C016201630164EU",
                        "display_name": "W4C018074024200205EU",
                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                        "iccid": "C2510S067000000000RA",
                        "iccid2": "C2510S067000000000RA",
                        "id": 123,
                        "meid": "359677060121128",
                        "model_number": "Wavelet Water Overflow 5100",
                        "serial_number": "W4C018074024200205EU",
                        "site_display_name": "Orange Canary12",
                        "site_id": 24
                    },
                    {
                        "akid": "W4C016201630164EU",
                        "display_name": "W4C018074024200205EU",
                        "firmware_version": "AK3SGSTM__v1.51_20140212T081829",
                        "iccid": "C2510S067000000000RA",
                        "iccid2": "C2510S067000000000RA",
                        "id": 123,
                        "meid": "359677060121128",
                        "model_number": "Wavelet Water Overflow 5100",
                        "serial_number": "W4C018074024200205EU",
                        "site_display_name": "Orange Canary12",
                        "site_id": 24
                    }
                ]
            },
            "StoredDeviceHealthCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredDeviceHealth"
                },
                "example": [
                    {
                        "counter_type_id": 3,
                        "device_id": 24,
                        "id": 123,
                        "sample_date": "2000-01-04T09:36:40Z",
                        "value": 4
                    },
                    {
                        "counter_type_id": 3,
                        "device_id": 24,
                        "id": 123,
                        "sample_date": "2000-01-04T09:36:40Z",
                        "value": 4
                    },
                    {
                        "counter_type_id": 3,
                        "device_id": 24,
                        "id": 123,
                        "sample_date": "2000-01-04T09:36:40Z",
                        "value": 4
                    },
                    {
                        "counter_type_id": 3,
                        "device_id": 24,
                        "id": 123,
                        "sample_date": "2000-01-04T09:36:40Z",
                        "value": 4
                    }
                ]
            },
            "StoredDeviceLogCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredDeviceLog"
                },
                "example": [
                    {
                        "device_id": 24,
                        "id": 123,
                        "log_date": "1976-01-12T02:09:12Z",
                        "message": "Error reading value",
                        "source": "MBUS[20]"
                    },
                    {
                        "device_id": 24,
                        "id": 123,
                        "log_date": "1976-01-12T02:09:12Z",
                        "message": "Error reading value",
                        "source": "MBUS[20]"
                    },
                    {
                        "device_id": 24,
                        "id": 123,
                        "log_date": "1976-01-12T02:09:12Z",
                        "message": "Error reading value",
                        "source": "MBUS[20]"
                    }
                ]
            },
            "StoredOrganizationCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredOrganization"
                },
                "example": [
                    {
                        "account_id": 123,
                        "display_name": "MyOrganization LTD",
                        "id": 123
                    },
                    {
                        "account_id": 123,
                        "display_name": "MyOrganization LTD",
                        "id": 123
                    }
                ]
            },
            "StoredSampleGPSBatch": {
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "The value is set to true if there is more samples GPS to retrieve",
                        "example": false
                    },
                    "samples": {
                        "$ref": "#/components/schemas/StoredSampleGPSCollection"
                    }
                },
                "example": {
                    "hasMore": true,
                    "samples": [
                        {
                            "gps": {
                                "altitude": 745.2,
                                "date": "2008-12-29T06:49:51Z",
                                "dilution_of_precision": 2.2,
                                "latitude": 31.771959,
                                "longitude": 35.217018,
                                "number_of_satellites": 4
                            },
                            "id": 123,
                            "stream_id": 24
                        },
                        {
                            "gps": {
                                "altitude": 745.2,
                                "date": "2008-12-29T06:49:51Z",
                                "dilution_of_precision": 2.2,
                                "latitude": 31.771959,
                                "longitude": 35.217018,
                                "number_of_satellites": 4
                            },
                            "id": 123,
                            "stream_id": 24
                        }
                    ]
                },
                "required": [
                    "hasMore",
                    "samples"
                ]
            },
            "StoredSampleGPSCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSampleGps"
                },
                "example": [
                    {
                        "gps": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "stream_id": 24
                    },
                    {
                        "gps": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "stream_id": 24
                    },
                    {
                        "gps": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "stream_id": 24
                    },
                    {
                        "gps": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "stream_id": 24
                    }
                ]
            },
            "StoredSampleImage": {
                "type": "object",
                "properties": {
                    "height": {
                        "type": "integer",
                        "description": "Height",
                        "example": 480
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the sample.",
                        "example": 123,
                        "format": "int64"
                    },
                    "sample_date": {
                        "type": "string",
                        "description": "Sample date",
                        "example": "1970-08-29T20:21:01Z",
                        "format": "date-time"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size",
                        "example": 1024
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "Stream ID",
                        "example": 24,
                        "minimum": 1,
                        "format": "int64"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL",
                        "example": "https://imageURL"
                    },
                    "width": {
                        "type": "integer",
                        "description": "Width",
                        "example": 640
                    }
                },
                "example": {
                    "height": 480,
                    "id": 123,
                    "sample_date": "1989-01-22T07:08:42Z",
                    "size": 1024,
                    "stream_id": 24,
                    "url": "https://imageURL",
                    "width": 640
                },
                "required": [
                    "id",
                    "stream_id",
                    "sample_date",
                    "width",
                    "height",
                    "size",
                    "url"
                ]
            },
            "StoredSampleImageBatch": {
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "The value is set to true if there is more samples to retrieve",
                        "example": true
                    },
                    "samples": {
                        "$ref": "#/components/schemas/StoredSampleImageCollection"
                    }
                },
                "example": {
                    "hasMore": false,
                    "samples": [
                        {
                            "height": 480,
                            "id": 123,
                            "sample_date": "1990-02-20T23:36:33Z",
                            "size": 1024,
                            "stream_id": 24,
                            "url": "https://imageURL",
                            "width": 640
                        },
                        {
                            "height": 480,
                            "id": 123,
                            "sample_date": "1990-02-20T23:36:33Z",
                            "size": 1024,
                            "stream_id": 24,
                            "url": "https://imageURL",
                            "width": 640
                        },
                        {
                            "height": 480,
                            "id": 123,
                            "sample_date": "1990-02-20T23:36:33Z",
                            "size": 1024,
                            "stream_id": 24,
                            "url": "https://imageURL",
                            "width": 640
                        }
                    ]
                },
                "required": [
                    "hasMore",
                    "samples"
                ]
            },
            "StoredSampleImageCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StoredSampleImage"
                },
                "example": [
                    {
                        "height": 480,
                        "id": 123,
                        "sample_date": "1990-02-20T23:36:33Z",
                        "size": 1024,
                        "stream_id": 24,
                        "url": "https://imageURL",
                        "width": 640
                    },
                    {
                        "height": 480,
                        "id": 123,
                        "sample_date": "1990-02-20T23:36:33Z",
                        "size": 1024,
                        "stream_id": 24,
                        "url": "https://imageURL",
                        "width": 640
                    },
                    {
                        "height": 480,
                        "id": 123,
                        "sample_date": "1990-02-20T23:36:33Z",
                        "size": 1024,
                        "stream_id": 24,
                        "url": "https://imageURL",
                        "width": 640
                    }
                ]
            },
            "StoredSampleRFIDBatch": {
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "The value is set to true if there is more samples RFID to retrieve",
                        "example": true
                    },
                    "samples": {
                        "$ref": "#/components/schemas/StoredSampleRFIDCollection"
                    }
                },
                "example": {
                    "hasMore": false,
                    "samples": [
                        {
                            "end_date": "2001-10-01T21:30:41Z",
                            "gps_location_info": {
                                "altitude": 745.2,
                                "date": "2008-12-29T06:49:51Z",
                                "dilution_of_precision": 2.2,
                                "latitude": 31.771959,
                                "longitude": 35.217018,
                                "number_of_satellites": 4
                            },
                            "id": 123,
                            "sample_date": "2010-02-17T19:33:58Z",
                            "start_date": "2010-04-18T20:41:55Z",
                            "stream_id": 24,
                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                        },
                        {
                            "end_date": "2001-10-01T21:30:41Z",
                            "gps_location_info": {
                                "altitude": 745.2,
                                "date": "2008-12-29T06:49:51Z",
                                "dilution_of_precision": 2.2,
                                "latitude": 31.771959,
                                "longitude": 35.217018,
                                "number_of_satellites": 4
                            },
                            "id": 123,
                            "sample_date": "2010-02-17T19:33:58Z",
                            "start_date": "2010-04-18T20:41:55Z",
                            "stream_id": 24,
                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                        },
                        {
                            "end_date": "2001-10-01T21:30:41Z",
                            "gps_location_info": {
                                "altitude": 745.2,
                                "date": "2008-12-29T06:49:51Z",
                                "dilution_of_precision": 2.2,
                                "latitude": 31.771959,
                                "longitude": 35.217018,
                                "number_of_satellites": 4
                            },
                            "id": 123,
                            "sample_date": "2010-02-17T19:33:58Z",
                            "start_date": "2010-04-18T20:41:55Z",
                            "stream_id": 24,
                            "tag_ids": "Sint consequatur hic laudantium alias est ut."
                        }
                    ]
                },
                "required": [
                    "hasMore",
                    "samples"
                ]
            },
            "StoredSampleRFIDCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSampleRfid"
                },
                "example": [
                    {
                        "end_date": "2001-10-01T21:30:41Z",
                        "gps_location_info": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "sample_date": "2010-02-17T19:33:58Z",
                        "start_date": "2010-04-18T20:41:55Z",
                        "stream_id": 24,
                        "tag_ids": "Sint consequatur hic laudantium alias est ut."
                    },
                    {
                        "end_date": "2001-10-01T21:30:41Z",
                        "gps_location_info": {
                            "altitude": 745.2,
                            "date": "2008-12-29T06:49:51Z",
                            "dilution_of_precision": 2.2,
                            "latitude": 31.771959,
                            "longitude": 35.217018,
                            "number_of_satellites": 4
                        },
                        "id": 123,
                        "sample_date": "2010-02-17T19:33:58Z",
                        "start_date": "2010-04-18T20:41:55Z",
                        "stream_id": 24,
                        "tag_ids": "Sint consequatur hic laudantium alias est ut."
                    }
                ]
            },
            "StoredSampleScalar": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the sample.",
                        "example": 123,
                        "format": "int64"
                    },
                    "sample_date": {
                        "type": "string",
                        "description": "Sample date",
                        "example": "1971-04-25T19:06:16Z",
                        "format": "date-time"
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "Stream ID",
                        "example": 24,
                        "minimum": 1,
                        "format": "int64"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value",
                        "example": "102.0000"
                    }
                },
                "example": {
                    "id": 123,
                    "sample_date": "1993-02-20T05:06:15Z",
                    "stream_id": 24,
                    "value": "102.0000"
                },
                "required": [
                    "id",
                    "stream_id",
                    "sample_date",
                    "value"
                ]
            },
            "StoredSampleScalarAggregationBatch": {
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "The value is set to true if there is more samples to retrieve",
                        "example": false
                    },
                    "samples": {
                        "$ref": "#/components/schemas/StoredSampleScalarAggregationCollection"
                    }
                },
                "example": {
                    "hasMore": false,
                    "samples": [
                        {
                            "agg_values": {
                                "avg": "15.0",
                                "max": "200.0",
                                "min": "1.0",
                                "sum": "350.0"
                            },
                            "number_of_samples": 14,
                            "start_date": "1995-03-31T01:51:58Z",
                            "stream_id": 24
                        },
                        {
                            "agg_values": {
                                "avg": "15.0",
                                "max": "200.0",
                                "min": "1.0",
                                "sum": "350.0"
                            },
                            "number_of_samples": 14,
                            "start_date": "1995-03-31T01:51:58Z",
                            "stream_id": 24
                        },
                        {
                            "agg_values": {
                                "avg": "15.0",
                                "max": "200.0",
                                "min": "1.0",
                                "sum": "350.0"
                            },
                            "number_of_samples": 14,
                            "start_date": "1995-03-31T01:51:58Z",
                            "stream_id": 24
                        },
                        {
                            "agg_values": {
                                "avg": "15.0",
                                "max": "200.0",
                                "min": "1.0",
                                "sum": "350.0"
                            },
                            "number_of_samples": 14,
                            "start_date": "1995-03-31T01:51:58Z",
                            "stream_id": 24
                        }
                    ]
                },
                "required": [
                    "hasMore",
                    "samples"
                ]
            },
            "StoredSampleScalarAggregationCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSampleScalarAggr"
                },
                "example": [
                    {
                        "agg_values": {
                            "avg": "15.0",
                            "max": "200.0",
                            "min": "1.0",
                            "sum": "350.0"
                        },
                        "number_of_samples": 14,
                        "start_date": "1995-03-31T01:51:58Z",
                        "stream_id": 24
                    },
                    {
                        "agg_values": {
                            "avg": "15.0",
                            "max": "200.0",
                            "min": "1.0",
                            "sum": "350.0"
                        },
                        "number_of_samples": 14,
                        "start_date": "1995-03-31T01:51:58Z",
                        "stream_id": 24
                    }
                ]
            },
            "StoredSampleScalarBatch": {
                "type": "object",
                "properties": {
                    "hasMore": {
                        "type": "boolean",
                        "description": "The value is set to true if there is more samples to retrieve",
                        "example": true
                    },
                    "samples": {
                        "$ref": "#/components/schemas/StoredSampleScalarCollection"
                    }
                },
                "example": {
                    "hasMore": true,
                    "samples": [
                        {
                            "id": 123,
                            "sample_date": "1995-09-19T15:35:20Z",
                            "stream_id": 24,
                            "value": "102.0000"
                        },
                        {
                            "id": 123,
                            "sample_date": "1995-09-19T15:35:20Z",
                            "stream_id": 24,
                            "value": "102.0000"
                        },
                        {
                            "id": 123,
                            "sample_date": "1995-09-19T15:35:20Z",
                            "stream_id": 24,
                            "value": "102.0000"
                        }
                    ]
                },
                "required": [
                    "hasMore",
                    "samples"
                ]
            },
            "StoredSampleScalarCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StoredSampleScalar"
                },
                "example": [
                    {
                        "id": 123,
                        "sample_date": "1995-09-19T15:35:20Z",
                        "stream_id": 24,
                        "value": "102.0000"
                    },
                    {
                        "id": 123,
                        "sample_date": "1995-09-19T15:35:20Z",
                        "stream_id": 24,
                        "value": "102.0000"
                    },
                    {
                        "id": 123,
                        "sample_date": "1995-09-19T15:35:20Z",
                        "stream_id": 24,
                        "value": "102.0000"
                    }
                ]
            },
            "StoredSiteCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSite"
                },
                "example": [
                    {
                        "account_organization_id": 13,
                        "creation_date": "1986-07-12T08:22:44Z",
                        "display_name": "Northern",
                        "id": 123,
                        "latitude": "Tempora voluptatum.",
                        "longitude": "Fuga nesciunt in enim.",
                        "status": "Active"
                    },
                    {
                        "account_organization_id": 13,
                        "creation_date": "1986-07-12T08:22:44Z",
                        "display_name": "Northern",
                        "id": 123,
                        "latitude": "Tempora voluptatum.",
                        "longitude": "Fuga nesciunt in enim.",
                        "status": "Active"
                    },
                    {
                        "account_organization_id": 13,
                        "creation_date": "1986-07-12T08:22:44Z",
                        "display_name": "Northern",
                        "id": 123,
                        "latitude": "Tempora voluptatum.",
                        "longitude": "Fuga nesciunt in enim.",
                        "status": "Active"
                    },
                    {
                        "account_organization_id": 13,
                        "creation_date": "1986-07-12T08:22:44Z",
                        "display_name": "Northern",
                        "id": 123,
                        "latitude": "Tempora voluptatum.",
                        "longitude": "Fuga nesciunt in enim.",
                        "status": "Active"
                    }
                ]
            },
            "StoredSiteCustomAttributeNameCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSiteCustomAttributeName"
                },
                "example": [
                    {
                        "display_name": "Tag",
                        "id": 123
                    },
                    {
                        "display_name": "Tag",
                        "id": 123
                    },
                    {
                        "display_name": "Tag",
                        "id": 123
                    }
                ]
            },
            "StoredSiteCustomAttributeValueCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredSiteCustomAttributeValue"
                },
                "example": [
                    {
                        "display_name": "Tag",
                        "id": 123,
                        "parent_id": 24,
                        "value": "M4_20513021_940001_FI"
                    },
                    {
                        "display_name": "Tag",
                        "id": 123,
                        "parent_id": 24,
                        "value": "M4_20513021_940001_FI"
                    }
                ]
            },
            "StoredStreamCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredStream"
                },
                "example": [
                    {
                        "creation_date": "1990-08-20T17:35:12Z",
                        "display_name": "Pressure measurement",
                        "id": 123,
                        "site_id": 24,
                        "status_id": 1,
                        "type_display_name": "Pressure",
                        "type_id": 13,
                        "units": "bar",
                        "value_scale": "3"
                    },
                    {
                        "creation_date": "1990-08-20T17:35:12Z",
                        "display_name": "Pressure measurement",
                        "id": 123,
                        "site_id": 24,
                        "status_id": 1,
                        "type_display_name": "Pressure",
                        "type_id": 13,
                        "units": "bar",
                        "value_scale": "3"
                    },
                    {
                        "creation_date": "1990-08-20T17:35:12Z",
                        "display_name": "Pressure measurement",
                        "id": 123,
                        "site_id": 24,
                        "status_id": 1,
                        "type_display_name": "Pressure",
                        "type_id": 13,
                        "units": "bar",
                        "value_scale": "3"
                    }
                ]
            },
            "StoredStreamCustomAttributeNameCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredStreamCustomAttributeName"
                },
                "example": [
                    {
                        "display_name": "Tag",
                        "id": 123
                    },
                    {
                        "display_name": "Tag",
                        "id": 123
                    },
                    {
                        "display_name": "Tag",
                        "id": 123
                    }
                ]
            },
            "StoredStreamCustomAttributeValueCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredStreamCustomAttributeValue"
                },
                "example": [
                    {
                        "display_name": "Tag",
                        "id": 123,
                        "parent_id": 24,
                        "value": "M4_20513021_940001_FI"
                    },
                    {
                        "display_name": "Tag",
                        "id": 123,
                        "parent_id": 24,
                        "value": "M4_20513021_940001_FI"
                    },
                    {
                        "display_name": "Tag",
                        "id": 123,
                        "parent_id": 24,
                        "value": "M4_20513021_940001_FI"
                    }
                ]
            },
            "StoredThresholdLevelCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ThresholdLevel"
                },
                "example": [
                    {
                        "comment": "gz3",
                        "display_name": "Low",
                        "false_alarm_filter": 100,
                        "lower_limit": -0.105,
                        "notification_actions": [
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            }
                        ],
                        "output_actions": [
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            }
                        ],
                        "sample_actions": [
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            }
                        ],
                        "sample_interval": 100,
                        "transmission_interval": "normal",
                        "transmit_immediately": true,
                        "upper_limit": 1.159
                    },
                    {
                        "comment": "gz3",
                        "display_name": "Low",
                        "false_alarm_filter": 100,
                        "lower_limit": -0.105,
                        "notification_actions": [
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            }
                        ],
                        "output_actions": [
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            }
                        ],
                        "sample_actions": [
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            }
                        ],
                        "sample_interval": 100,
                        "transmission_interval": "normal",
                        "transmit_immediately": true,
                        "upper_limit": 1.159
                    },
                    {
                        "comment": "gz3",
                        "display_name": "Low",
                        "false_alarm_filter": 100,
                        "lower_limit": -0.105,
                        "notification_actions": [
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 446983629210976137,
                                "repeats_per_user_on_failed": 256,
                                "type": "voice",
                                "user_group_id": 744
                            }
                        ],
                        "output_actions": [
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            }
                        ],
                        "sample_actions": [
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "single"
                            }
                        ],
                        "sample_interval": 100,
                        "transmission_interval": "normal",
                        "transmit_immediately": true,
                        "upper_limit": 1.159
                    }
                ]
            },
            "StoredUIPreferences": {
                "type": "object",
                "properties": {
                    "date_format": {
                        "type": "string",
                        "example": "Consequuntur nostrum."
                    },
                    "time_format": {
                        "type": "string",
                        "example": "In ea officia fugiat enim."
                    }
                },
                "example": {
                    "date_format": "In laboriosam qui.",
                    "time_format": "Animi ut in facilis."
                },
                "required": [
                    "date_format",
                    "time_format"
                ]
            },
            "StoredUserCollection": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/AkapiStoredUser"
                },
                "example": [
                    {
                        "email_address": "test@test.tst",
                        "id": 123,
                        "user_name": "username"
                    },
                    {
                        "email_address": "test@test.tst",
                        "id": 123,
                        "user_name": "username"
                    },
                    {
                        "email_address": "test@test.tst",
                        "id": 123,
                        "user_name": "username"
                    }
                ]
            },
            "StoredUserDetails": {
                "type": "object",
                "properties": {
                    "email_address": {
                        "type": "string",
                        "description": "Email Address",
                        "example": "test@test.tst",
                        "maxLength": 255
                    },
                    "first_name": {
                        "type": "string",
                        "description": "First Name",
                        "example": "John",
                        "maxLength": 64
                    },
                    "id": {
                        "type": "integer",
                        "description": "ID is the unique id of the user.",
                        "example": 123,
                        "format": "int64"
                    },
                    "last_name": {
                        "type": "string",
                        "description": "Lastname",
                        "example": "Doe",
                        "maxLength": 64
                    },
                    "mobile_phone": {
                        "type": "string",
                        "description": "Mobile Phone",
                        "example": "012345678901",
                        "maxLength": 32
                    },
                    "timezone_name": {
                        "type": "string",
                        "description": "Timezone",
                        "example": "UTC",
                        "maxLength": 64
                    },
                    "user_name": {
                        "type": "string",
                        "description": "username",
                        "example": "username",
                        "maxLength": 255
                    }
                },
                "example": {
                    "email_address": "test@test.tst",
                    "first_name": "John",
                    "id": 123,
                    "last_name": "Doe",
                    "mobile_phone": "012345678901",
                    "timezone_name": "UTC",
                    "user_name": "username"
                },
                "required": [
                    "id",
                    "user_name",
                    "timezone_name"
                ]
            },
            "ThresholdActionNotification": {
                "type": "object",
                "properties": {
                    "num_repeats_all_on_failed": {
                        "type": "integer",
                        "description": "Defines how many times voice notification would be repeated on entire group of users",
                        "example": 256,
                        "minimum": 0
                    },
                    "relevance_threshold": {
                        "type": "integer",
                        "description": "Whats that for..?",
                        "example":1643006380910026066,                             
                        "format": "int64"
                    },
                    "repeats_per_user_on_failed": {
                        "type": "integer",
                        "description": "Defines how many times voice notification would be repeated before trying the another user (in pre defined userGroup)",
                        "example": 256,
                        "minimum": 0
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of notification action",
                        "example": "sms",
                        "enum": [
                            "mail",
                            "sms",
                            "ticketSystem",
                            "voice"
                        ]
                    },
                    "user_group_id": {
                        "type": "integer",
                        "description": "Group Id that user is belonged to, this value should be of existed group and only the group that you have a permission access to",
                        "example": 744,
                        "minimum": 0
                    }
                },
                "example": {
                    "num_repeats_all_on_failed": 256,
                    "relevance_threshold": 199769866793874,
                    "repeats_per_user_on_failed": 256,
                    "type": "sms",
                    "user_group_id": 744,
                    "format":"int64"                    
                },
                "required": [
                    "type",
                    "user_group_id",
                    "repeats_per_user_on_failed",
                    "num_repeats_all_on_failed",
                    "relevance_threshold"
                ]
            },
            "ThresholdActionOutput": {
                "type": "object",
                "properties": {
                    "channel_num": {
                        "type": "integer",
                        "description": "Number of the channel in the wavelet configurations",
                        "example": 0,
                        "minimum": 0,
                        "maximum": 15
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of output action",
                        "example": "set_down",
                        "enum": [
                            "pulse_once",
                            "set_down",
                            "set_up"
                        ]
                    }
                },
                "example": {
                    "channel_num": 0,
                    "type": "set_down"
                },
                "required": [
                    "type",
                    "channel_num"
                ]
            },
            "ThresholdActionSample": {
                "type": "object",
                "properties": {
                    "sample_group_id": {
                        "type": "integer",
                        "description": "SampleGroupID is the id of the group that channel is belong to (maximum 2 groups). On this group sample settings of a Wavelet would be applied. This id must be of an existing sample group. In order to set up the stream_id field SampleGroupID field must be omitted",
                        "example": 2,
                        "minimum": 0
                    },
                    "stream_id": {
                        "type": "integer",
                        "description": "StreamId is the unique id of the stream to make an action on",
                        "example": 4445,
                        "minimum": 0,
                        "format":"int64"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of sample action on a group of streams",
                        "example": "single",
                        "enum": [
                            "pause",
                            "resume",
                            "single",
                            "pause_single"
                        ]
                    }
                },
                "example": {
                    "sample_group_id": 744,
                    "stream_id": 4445,
                    "type": "pause_single"
                },
                "required": [
                    "type",
                    "stream_id"
                ]
            },
            "ThresholdLevel": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Comment for the threshold's level",
                        "example": "713",
                        "maxLength": 512
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Name of the threshold's level",
                        "example": "Low",
                        "maxLength": 256
                    },
                    "false_alarm_filter": {
                        "type": "integer",
                        "description": "Threshold triggered interval in seconds",
                        "default": 0,
                        "example": 100,
                        "minimum": 0,
                        "maximum": 4294967295,
                        "format":"int64"
                    },
                    "lower_limit": {
                        "type": "number",
                        "description": "Lower limit of the threshold range",
                        "example": -0.105,
                        "format": "double"
                    },
                    "notification_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionNotification"
                        },
                        "example": [
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 1724462722,
                                "repeats_per_user_on_failed": 256,
                                "type": "mail",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 17244625,
                                "repeats_per_user_on_failed": 256,
                                "type": "mail",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 172446276,
                                "repeats_per_user_on_failed": 256,
                                "type": "mail",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 172446277,
                                "repeats_per_user_on_failed": 256,
                                "type": "mail",
                                "user_group_id": 744
                            }
                        ]
                    },
                    "output_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionOutput"
                        },
                        "example": [
                            {
                                "channel_num": 0,
                                "type": "set_up"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_up"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_up"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_up"
                            }
                        ]
                    },
                    "sample_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionSample"
                        },
                        "example": [
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause_single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause_single"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause_single"
                            }
                        ]
                    },
                    "sample_interval": {
                        "type": "integer",
                        "description": "Sample interval in seconds how often the device streams",
                        "default": 300,
                        "example": 100,
                        "minimum": 30,
                        "maximum": 4294967295,
                        "format":"int64"
                    },
                    "transmission_interval": {
                        "type": "string",
                        "description": "Transmission device report interval",
                        "default": "normal",
                        "example": "emergency",
                        "enum": [
                            "normal",
                            "event",
                            "emergency"
                        ]
                    },
                    "transmit_immediately": {
                        "type": "boolean",
                        "description": "When a device reached threshold zone does he need to transmit immediately",
                        "default": false,
                        "example": true
                    },
                    "upper_limit": {
                        "type": "number",
                        "description": "Upper limit of the threshold range",
                        "example": 1.159,
                        "format": "double"
                    }
                },
                "example": {
                    "comment": "zsl",
                    "display_name": "Low",
                    "false_alarm_filter": 100,
                    "lower_limit": -0.105,
                    "notification_actions": [
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 172446279,
                            "repeats_per_user_on_failed": 256,
                            "type": "mail",
                            "user_group_id": 744
                        },
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 1724462729,
                            "repeats_per_user_on_failed": 256,
                            "type": "mail",
                            "user_group_id": 744
                        }
                    ],
                    "output_actions": [
                        {
                            "channel_num": 0,
                            "type": "set_up"
                        },
                        {
                            "channel_num": 0,
                            "type": "set_up"
                        },
                        {
                            "channel_num": 0,
                            "type": "set_up"
                        }
                    ],
                    "sample_actions": [
                        {
                            "sample_group_id": 744,
                            "stream_id": 4445,
                            "type": "pause_single"
                        },
                        {
                            "sample_group_id": 744,
                            "stream_id": 4445,
                            "type": "pause_single"
                        }
                    ],
                    "sample_interval": 100,
                    "transmission_interval": "normal",
                    "transmit_immediately": true,
                    "upper_limit": 1.159
                },
                "required": [
                    "lower_limit",
                    "comment",
                    "display_name",
                    "upper_limit",
                    "false_alarm_filter",
                    "sample_interval",
                    "transmission_interval",
                    "transmit_immediately"
                ]
            },
            "ThresholdLevel2": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Comment for the threshold's level",
                        "example": "r8n",
                        "maxLength": 512
                    },
                    "display_name": {
                        "type": "string",
                        "description": "Name of the threshold's level",
                        "example": "Low",
                        "maxLength": 256
                    },
                    "false_alarm_filter": {
                        "type": "integer",
                        "description": "Threshold triggered interval in seconds",
                        "default": 0,
                        "example": 100,
                        "minimum": 0,
                        "maximum": 4294967295,
                        "format":"int64"
                    },
                    "notification_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionNotification"
                        },
                        "example": [
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 6696544136274882686,
                                "repeats_per_user_on_failed": 256,
                                "type": "ticketSystem",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 6696544136274882686,
                                "repeats_per_user_on_failed": 256,
                                "type": "ticketSystem",
                                "user_group_id": 744
                            },
                            {
                                "num_repeats_all_on_failed": 256,
                                "relevance_threshold": 6696544136274882686,
                                "repeats_per_user_on_failed": 256,
                                "type": "ticketSystem",
                                "user_group_id": 744
                            }
                        ]
                    },
                    "output_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionOutput"
                        },
                        "example": [
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            },
                            {
                                "channel_num": 0,
                                "type": "set_down"
                            }
                        ]
                    },
                    "sample_actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ThresholdActionSample"
                        },
                        "example": [
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause"
                            },
                            {
                                "sample_group_id": 744,
                                "stream_id": 4445,
                                "type": "pause"
                            }
                        ]
                    },
                    "sample_interval": {
                        "type": "integer",
                        "description": "Sample interval in seconds how often the device streams",
                        "default": 300,
                        "example": 100,
                        "minimum": 30,
                        "maximum": 4294967295,
                        "format":"int64"
                    },
                    "transmission_interval": {
                        "type": "string",
                        "description": "Transmission device report interval",
                        "default": "normal",
                        "example": "emergency",
                        "enum": [
                            "normal",
                            "event",
                            "emergency"
                        ]
                    },
                    "transmit_immediately": {
                        "type": "boolean",
                        "description": "When a device reached threshold zone does he need to transmit immediately",
                        "default": false,
                        "example": true
                    },
                    "upper_limit": {
                        "type": "number",
                        "description": "Upper limit of the threshold range",
                        "example": 1.159,
                        "format": "double"
                    }
                },
                "example": {
                    "comment": "dm0",
                    "display_name": "Low",
                    "false_alarm_filter": 100,
                    "notification_actions": [
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 6696544136274882686,
                            "repeats_per_user_on_failed": 256,
                            "type": "ticketSystem",
                            "user_group_id": 744
                        },
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 6696544136274882686,
                            "repeats_per_user_on_failed": 256,
                            "type": "ticketSystem",
                            "user_group_id": 744
                        },
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 6696544136274882686,
                            "repeats_per_user_on_failed": 256,
                            "type": "ticketSystem",
                            "user_group_id": 744
                        },
                        {
                            "num_repeats_all_on_failed": 256,
                            "relevance_threshold": 6696544136274882686,
                            "repeats_per_user_on_failed": 256,
                            "type": "ticketSystem",
                            "user_group_id": 744
                        }
                    ],
                    "output_actions": [
                        {
                            "channel_num": 0,
                            "type": "set_down"
                        },
                        {
                            "channel_num": 0,
                            "type": "set_down"
                        },
                        {
                            "channel_num": 0,
                            "type": "set_down"
                        }
                    ],
                    "sample_actions": [
                        {
                            "sample_group_id": 744,
                            "stream_id": 4445,
                            "type": "pause"
                        },
                        {
                            "sample_group_id": 744,
                            "stream_id": 4445,
                            "type": "pause"
                        }
                    ],
                    "sample_interval": 100,
                    "transmission_interval": "emergency",
                    "transmit_immediately": true,
                    "upper_limit": 1.159
                },
                "required": [
                    "comment",
                    "display_name",
                    "upper_limit",
                    "false_alarm_filter",
                    "sample_interval",
                    "transmission_interval",
                    "transmit_immediately"
                ]
            },
            "ThresholdStatus": {
                "type": "object",
                "properties": {
                    "Status": {
                        "type": "string",
                        "example": "Quo sit id fugiat."
                    }
                },
                "example": {
                    "Status": "Modi sit voluptas."
                }
            },
            "Unauthorized": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message of error",
                        "example": "incorrect credentials"
                    },
                    "request_id": {
                        "type": "string",
                        "description": "Request ID",
                        "example": "uGv69FKl"
                    }
                },
                "description": "Unauthorized",
                "example": {
                    "message": "incorrect credentials",
                    "request_id": "uGv69FKl"
                },
                "required": [
                    "request_id",
                    "message"
                ]
            }
        },
        "securitySchemes": {
            "jwt_header_Authorization": {
                "type": "http",
                "description": "Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint.",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "account"
        },
        {
            "name": "channel"
        },
        {
            "name": "device"
        },
        {
            "name": "devicehealth"
        },
        {
            "name": "devicelog"
        },
        {
            "name": "insight"
        },
        {
            "name": "samplegps"
        },
        {
            "name": "sampleimage"
        },
        {
            "name": "samplerfid"
        },
        {
            "name": "sample"
        },
        {
            "name": "site"
        },
        {
            "name": "stream"
        },
        {
            "name": "system"
        },
        {
            "name": "threshold"
        },
        {
            "name": "transformation"
        },
        {
            "name": "user"
        }
    ]
}